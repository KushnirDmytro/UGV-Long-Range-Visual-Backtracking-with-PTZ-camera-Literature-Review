
@article{winiarski_meros_2023,
	title = {{MeROS}: {SysML}-based {Metamodel} for {ROS}-based {Systems}},
	volume = {11},
	issn = {2169-3536},
	shorttitle = {{MeROS}},
	url = {http://arxiv.org/abs/2303.08254},
	doi = {10.1109/ACCESS.2023.3301727},
	abstract = {The complexity of today’s robot control systems implies difficulty in developing them efficiently and reliably. Systems engineering (SE) and frameworks come to help. The framework metamodels are needed to support the standardisation and correctness of the created application models. Although the use of frameworks is widespread nowadays, for the most popular of them, Robot Operating System (ROS), a contemporary metamodel has been missing so far. This article proposes a new metamodel for ROS called MeROS, which addresses the running system and developer workspace. The ROS comes in two versions: ROS 1 and ROS 2. The metamodel includes both versions. In particular, the latest ROS 1 concepts are considered, such as nodelet, action, and metapackage. An essential addition to the original ROS concepts is the grouping of these concepts, which provides an opportunity to illustrate the system’s decomposition and varying degrees of detail in its presentation. The metamodel is derived from the requirements and verified on the practical example of Rico assistive robot. The matter is described in a standardised way in SysML (Systems Modeling Language). Hence, common development tools that support SysML can help develop robot controllers in the spirit of SE.},
	language = {en},
	urldate = {2025-01-10},
	journal = {IEEE Access},
	author = {Winiarski, Tomasz},
	year = {2023},
	note = {arXiv:2303.08254 [cs]},
	keywords = {Computer Science - Robotics, Computer Science - Software Engineering},
	pages = {82802--82815},
}

@article{ros_modularity,
  title={Robot Operating System (ROS): The Complete Reference (Volume 2)},
  author={Quigley, Morgan and Gerkey, Brian and Smart, William D.},
  journal={Springer},
  year={2020},
  note={Key reference for modular and open-source system design in robotics.},
  doi={10.1007/978-3-030-20190-6},
  url={https://link.springer.com/book/10.1007/978-3-030-20190-6}
}

@article{bertoni_iterative_2019,
	title = {Iterative value models generation in the engineering design process},
	volume = {5},
	copyright = {http://creativecommons.org/licenses/by-nc-sa/4.0/},
	issn = {2053-4701},
	url = {https://www.cambridge.org/core/product/identifier/S2053470119000131/type/journal_article},
	doi = {10.1017/dsj.2019.13},
	abstract = {Value models are increasingly discussed today as a means to frontload conceptual design activities in engineering design, with the final goal of reducing cost and rework associated with sub-optimal decisions made from a system perspective. However, there is no shared agreement in the research community about what a value model exactly is, how many types of value models are there, their input–output relationships and their usage along the engineering design process timeline. Emerging from five case studies conducted in the aerospace and in the construction equipment industry, this paper describes how to tailor the development of value models in the engineering design process. The initial descriptive study findings are summarized in the form of seven lessons learned that shall be taken into account when designing value models for design decision support. From these lessons, the paper proposes a six-step framework that considers the need to update the nature and definition of value models as far as new information becomes available, moving from initial estimations based on expert judgment to detailed quantitative analysis.},
	language = {en},
	urldate = {2025-01-10},
	journal = {Design Science},
	author = {Bertoni, Marco and Bertoni, Alessandro},
	year = {2019},
	pages = {e18}
}


@article{kemper_iterative_nodate,
	title = {Iterative {Process} {Models} for {Mobile} {Application} {Systems}:  {A} {Framework}},
	abstract = {The development of mobile application systems is usually realized on the basis of iterative process models of which there are many different variants. The selection of an appropriate process model is a crucial issue for the success of every system development project, particularly for systems in a highly volatile environment such as mobile application systems. This article is devoted to the idea of selecting and applying alternative iterative process models in a project-specific way.},
	language = {en},
	author = {Kemper, Hans-Georg and Wolf, Elke}
}

@article{wynn_modelling_nodate,
	title = {{MODELLING} {ITERATION} {IN} {ENGINEERING} {DESIGN}},
	abstract = {This paper examines design iteration and its modelling in the simulation of New Product Development (NPD) processes. A framework comprising six perspectives of iteration is proposed and it is argued that the importance of each perspective depends upon domain-specific factors. Key challenges of modelling iteration in process simulation frameworks such as the Design Structure Matrix are discussed, and we argue that no single model or framework can fully capture the iterative dynamics of an NPD process. To conclude, we propose that consideration of iteration and its representation could help identify the most appropriate modelling framework for a given process and modelling objective, thereby improving the fidelity of design process simulation models and increasing their utility.},
	language = {en},
	author = {Wynn, David C and Eckert, Claudia M and Clarkson, P John}
}

@article{riesener_methodology_2021,
	title = {Methodology for iterative system modeling in agile product development},
	volume = {100},
	issn = {22128271},
	url = {https://linkinghub.elsevier.com/retrieve/pii/S2212827121005692},
	doi = {10.1016/j.procir.2021.05.101},
	abstract = {Nowadays, manufacturing companies are challenged by dynamic market environments caused by increasing globalization, digitization and climate change. Therefore, the ability to act with speed, flexibility and efficiency in product development becomes inevitable for success. Moreover, various stakeholder requirements have to be considered and time to market has to be reduced. The development of complex mechatronic systems also requires an interdisciplinary cooperation of various engineering domains, i.e. mechanics, electrical engineering and computer science.},
	language = {en},
	urldate = {2025-01-10},
	journal = {Procedia CIRP},
	author = {Riesener, Michael and Doelle, Christian and Perau, Stefan and Lossie, Philipp and Schuh, Guenther},
	year = {2021},
	pages = {439--444}
}

@article{lohse_modeling_2014,
	title = {A {Modeling} {Framework} for {User}-{Driven} {Iterative} {Design} of {Autonomous} {Systems}},
	volume = {6},
	copyright = {http://www.springer.com/tdm},
	issn = {1875-4791, 1875-4805},
	url = {http://link.springer.com/10.1007/s12369-013-0209-8},
	doi = {10.1007/s12369-013-0209-8},
	abstract = {Many researchers in human-robot interaction have acknowledged the fact that iterative design is necessary to optimize the robots for the interaction with the users. However, few iterative user studies have been reported. We believe that one reason for this is that setting up systems for iterative studies is cumbersome because the system architectures do not support iterative design. In the paper, we address this problem by interlinking usability research with system development. In a ﬁrst user study, we identify requirements and concepts for a new framework that eases the employment of autonomous robots in the iterative design process. With a second user study we show how robot behaviors are implemented in the new framework and how it enables the developer to efﬁciently make changes to these behaviors.},
	language = {en},
	number = {1},
	urldate = {2025-01-10},
	journal = {International Journal of Social Robotics},
	author = {Lohse, Manja and Siepmann, Frederic and Wachsmuth, Sven},
	month = jan,
	year = {2014},
	pages = {121--139}
}
